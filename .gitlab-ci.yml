services:
  - docker:19.03.1-dind

stages:
  - build_staging
  - deploy_staging

build_staging:
  stage: build_staging
  environment: staging
  only:
    - develop
  script:
    - docker build -f cicd/Dockerfile -t $REGISTRY/tms2/app:staging --build-arg APP_ENV=staging .
    - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD $REGISTRY/tms2/app:staging
    - docker push $REGISTRY/tms2/app:staging

deploy_staging:
  stage: deploy_staging
  environment: staging
  only:
    - develop
  script:
    - apk update
    - apk add openssh
    - echo "-----BEGIN RSA PRIVATE KEY-----" > key.pem
    - echo $SSH_KEY >> key.pem
    - echo "-----END RSA PRIVATE KEY-----" >> key.pem
    - chmod 400 key.pem
    - echo "DB_HOST=$DB_HOST" > .env
    - echo "DB_NAME=$DB_NAME" >> .env
    - echo "DB_PASSWORD=$DB_PASSWORD" >> .env
    - echo "DB_PORT=$DB_PORT" >> .env
    - echo "DB_USER=$DB_USER" >> .env
    - scp -i key.pem -o StrictHostKeyChecking=no cicd/docker-compose-staging.yml ubuntu@tms.jafton.com:~/tms2/docker-compose.yml
    - scp -i key.pem -o StrictHostKeyChecking=no .env ubuntu@tms.jafton.com:~/tms2/staging.env
    - ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@tms.jafton.com 'cd tms2 && docker login --username '$DOCKER_USERNAME' --password '$DOCKER_PASSWORD' '$REGISTRY'/tms2/app:staging && docker compose -p tms2 stop && docker compose -p tms2 rm -f && docker pull '$REGISTRY'/tms2/app:staging && docker tag '$REGISTRY'/tms2/app:staging tms2/app:staging && docker compose -p tms2 up --remove-orphans --detach'
    - rm key.pem
    - rm .env
