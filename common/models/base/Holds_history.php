<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "holds_history".
 *
 * @property integer $id
 * @property integer $load_id
 * @property string $note_from_customer_and_broker
 * @property integer $created_by
 * @property integer $updated_by
 * @property string $updated_at
 * @property string $created_at
 *
 * @property \common\models\Load $load
 * @property string $aliasModel
 */
abstract class Holds_history extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'holds_history';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['load_id'], 'required'],
            [['load_id'], 'default', 'value' => null],
            [['load_id'], 'integer'],
            [['note_from_customer_and_broker'], 'string'],
            [['load_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Load::className(), 'targetAttribute' => ['load_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'load_id' => 'Load ID',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'updated_at' => 'Updated At',
            'created_at' => 'Created At',
            'note_from_customer_and_broker' => 'Note From Customer And Broker',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoad()
    {
        return $this->hasOne(\common\models\Load::className(), ['id' => 'load_id']);
    }




}
