<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

/**
 * This is the base-model class for table "load_documents".
 *
 * @property integer $id
 * @property integer $load_id
 * @property string $path
 * @property string $filename
 * @property string $mime_type
 * @property integer $doc_type
 * @property integer $upload_by
 * @property string $updated_at
 * @property string $created_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \common\models\LoadDocumentType $docType
 * @property \common\models\Load $load
 * @property \common\models\User $uploadBy
 * @property string $aliasModel
 */
abstract class LoadDocuments extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'load_documents';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => false,
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['load_id', 'doc_type', 'upload_by'], 'default', 'value' => null],
            [['load_id', 'doc_type', 'upload_by'], 'integer'],
         //   [['path', 'filename', 'mime_type'], 'string', 'max' => 255],
            [['load_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Load::className(), 'targetAttribute' => ['load_id' => 'id']],
            [['doc_type'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\LoadDocumentType::className(), 'targetAttribute' => ['doc_type' => 'id']],
            [['upload_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['upload_by' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'load_id' => 'Load ID',
            'path' => 'Path',
            'filename' => 'Filename',
            'mime_type' => 'Mime Type',
            'doc_type' => 'Doc Type',
            'updated_at' => 'Updated At',
            'created_at' => 'Created At',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'upload_by' => 'Upload By',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocType()
    {
        return $this->hasOne(\common\models\LoadDocumentType::className(), ['id' => 'doc_type']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoad()
    {
        return $this->hasOne(\common\models\Load::className(), ['id' => 'load_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUploadBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'upload_by']);
    }




}