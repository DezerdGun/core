<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "billing_detail".
 *
 * @property integer $id
 * @property integer $billing_id
 * @property integer $charge_id
 * @property string $description
 * @property string $price
 * @property integer $unit_count
 * @property integer $measure_id
 * @property integer $free_unit
 * @property integer $per_unit
 *
 * @property \common\models\Billing $billing
 * @property \common\models\Charge $charge
 * @property \common\models\Measure $measure
 * @property string $aliasModel
 */
abstract class BillingDetail extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'billing_detail';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['billing_id', 'charge_id', 'unit_count', 'measure_id', 'free_unit', 'per_unit'], 'default', 'value' => null],
            [['billing_id', 'charge_id', 'unit_count', 'measure_id', 'free_unit', 'per_unit'], 'integer'],
            [['price'], 'number'],
            [['description'], 'string', 'max' => 250],
            [['billing_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Billing::className(), 'targetAttribute' => ['billing_id' => 'id']],
            [['charge_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Charge::className(), 'targetAttribute' => ['charge_id' => 'id']],
            [['measure_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Measure::className(), 'targetAttribute' => ['measure_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'billing_id' => 'Billing ID',
            'charge_id' => 'Charge ID',
            'description' => 'Description',
            'price' => 'Price',
            'unit_count' => 'Unit Count',
            'measure_id' => 'Measure ID',
            'free_unit' => 'Free Unit',
            'per_unit' => 'Per Unit',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBilling()
    {
        return $this->hasOne(\common\models\Billing::className(), ['id' => 'billing_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCharge()
    {
        return $this->hasOne(\common\models\Charge::className(), ['id' => 'charge_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMeasure()
    {
        return $this->hasOne(\common\models\Measure::className(), ['id' => 'measure_id']);
    }




}
