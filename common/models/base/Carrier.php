<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use common\models\Company;
use common\models\User;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "carrier".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $w9_file
 * @property string $w9_mime_type
 * @property string $ic_file
 * @property string $ic_mime_type
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $aliasModel
 * @property integer $company_id
 * @property string $scac
 * @property string $instagram
 * @property string $facebook
 * @property string $linkedin
 * @property string $w9_name
 * @property string $ic_name
 * @property User $user
 * @property Company $company
 */
abstract class Carrier extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'carrier';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'company_id'], 'required'],
            [['user_id', 'company_id'], 'integer'],
            [['user_id'], 'exist', 'targetClass' => '\common\models\User', 'targetAttribute' => ['user_id' => 'id', 'role' => 'role'], 'skipOnEmpty' => true],
            ['user_id', 'unique', 'targetClass' => '\common\models\Carrier', 'message' => 'Carrier already exists'],
            [['scac','instagram', 'facebook', 'linkedin', 'w9_name', 'ic_name'], 'string']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => "User ID",
            'w9_file' => 'W9 File',
            'ic_file' => 'IC File',
            'w9_mime_type' => 'w9 mime type',
            'ic_mime_type' => 'ic mime type',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'company_id' => 'Company ID',
            'scac' => 'SCAC',
            'instagram' => 'Instagram',
            'facebook' => 'Facebook',
            'linkedin' => 'Linkedin',
            'w9_name' => 'W9 Name',
            'ic_name' => 'IC Name'
        ];
    }



    /**
     * @inheritdoc
     * @return \api\models\CarrierQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \api\models\CarrierQuery(get_called_class());
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }

    public function getCompany(): \yii\db\ActiveQuery
    {
        return $this->hasOne(Company::className(), ['id' => 'company_id']);
    }
}
