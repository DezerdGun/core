<?php

namespace common\models;

use common\helpers\DateTime;
use common\models\traits\Template;
use \common\models\base\LoadBidDetails as BaseLoadBidDetails;
use yii\helpers\ArrayHelper;
use yii\web\NotFoundHttpException;

/**
 * This is the model class for table "load_bid_details".
 */
class LoadBidDetails extends BaseLoadBidDetails
{
    use Template;

    /**
     * @var int
     */
    public $_old_load_bid_details;
    public $_old_charge_code;
    public $_old_price;
    public $_old_unit_measure;
    public $_old_free_units;
    public $_old_note_from_carrier;
    public $_old_edit_bid_details;

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->_old_load_bid_details = $this->load_bid_id;
        $this->_old_charge_code = $this->charge_code;
        $this->_old_price = $this->price;
        $this->_old_unit_measure = $this->unit_measure;
        $this->_old_free_units = $this->free_units;
        $this->_old_note_from_carrier = $this->note_from_carrier;
        $this->_old_edit_bid_details = $this->edit_bid_details;

        return true;
    }

    public function behaviors()
    {
        return DateTime::setLocalTimestamp(parent::behaviors());
    }

    public function rules()
    {
        return ArrayHelper::merge(
            parent::rules(),
            [
                array('load_bid_id', 'unique', 'message' => '{attribute}:{value} already exists!'),
            ]
        );
    }

    public function addNote($str)
    {
        $note = new LoadNote();
        $nowDate = DateTime::nowDateYMD();
        $nowTime = DateTime::nowTime();
        $note->created_at = "{$nowDate} {$nowTime}:00";
        $note->load_id = $this->load_bid_id;
        $note->note_from_carrier = $str;
        $note->save();
    }


    public function upEditDetails($loadId)
    {
        $update = $loadId;
        if ($loadId) {
            $temporary = "Load_bid_details $update->_old_load_bid_details:";
            if ($loadId->_old_charge_code != $loadId->charge_code) {
                $temporary = $temporary . sprintf(
                        ' Charge_code update from %d to %d.',
                        $loadId->_old_charge_code,
                        $loadId->charge_code
                    );
                if ($loadId->_old_price != $loadId->price) {
                    $temporary = $temporary . sprintf(
                            'Price update from %d to %d.',
                            $loadId->_old_price,
                            $loadId->price
                        );
                    if ($loadId->_old_unit_measure != $loadId->unit_measure) {
                        $temporary = $temporary . sprintf(
                                'Unit_measure update from %s to %s.',
                                $loadId->_old_unit_measure,
                                $loadId->unit_measure
                            );
                        if ($loadId->_old_free_units != $loadId->free_units) {
                            $temporary = $temporary . sprintf(
                                    'Free_units update from %d to %d.',
                                    $loadId->_old_free_units,
                                    $loadId->free_units
                                );
                            if ($loadId->_old_note_from_carrier != $loadId->note_from_carrier) {
                                $temporary = $temporary . sprintf(
                                        'Note_from_carrier: %s to %s .',
                                        $loadId->_old_note_from_carrier,
                                        $loadId->note_from_carrier
                                    );
                                if ($loadId->_old_edit_bid_details != $loadId->edit_bid_details) {
                                    $temporary = $temporary . sprintf(
                                            'Edit_bid_details: %s to %s ',
                                            $loadId->_old_edit_bid_details,
                                            $loadId->edit_bid_details
                                        );
                                    return $loadId->addNote($temporary);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
